
		Assessment for Data Engineering Internship 

	Section 1: Environment setup and loading Northwind data.

		3.Deliverables:
			a.DDL statements
			b.Loading scripts for populating data into the tables
			
		Ans:a:DDL statements
		1) To create table regions;
			DROP TABLE IF EXISTS regions;
			CREATE TABLE regions (
   				RegionID int(11) NOT NULL,	
 				RegionDescription varchar(50) NOT NULL, 	
    			PRIMARY KEY(RegionID)
			);
				                                                                                                                                                                         |
		2) To create table territories;
			DROP TABLE IF EXISTS territories;
			CREATE TABLE territories (
    				TerritoryID varchar(20)  NOT NULL, 	
 				TerritoryDescription varchar(50) NOT NULL, 	
 				RegionID int(11)  ,
    			PRIMARY KEY(TerritoryID),
			FOREIGN KEY(RegionID) REFERENCES regions(RegionID)
			);

		3) To create table employees;
			DROP TABLE IF EXISTS employees;
			CREATE TABLE employees (
    				EmployeeID int(11) NOT NULL, 	
 				LastName varchar(20) NOT NULL, 	
 				FirstName varchar(10) NOT NULL, 	
 				Title varchar(30), 	
 				TitleOfCourtesy varchar(25), 	
 				BirthDate datetime, 	
				HireDate datetime, 	
 				Address varchar(60), 	
 				City varchar(15), 	
 				Region varchar(15), 	
 				PostalCode varchar(10), 	
 				Country varchar(15), 	
 				HomePhone varchar(24), 	
 				Extension varchar(4), 	
 				Notes mediumtext NOT NULL,
				ReportsTo int(11) NOT NULL, 	
 				PhotoPath varchar(255), 	
 				Salary float,
			PRIMARY KEY(EmployeeID)
			);

		4) To create table employee_territories;
			DROP TABLE IF EXISTS employee_territories;
			CREATE TABLE employee_territories (
    				EmployeeID int(11) NOT NULL,
 				TerritoryID varchar(20) NOT NULL,
			FOREIGN KEY(TerritoryID) REFERENCES territories(TerritoryID),
			FOREIGN KEY(EmployeeID) REFERENCES employees(EmployeeID)
			);

		5) To create table shippers;
			DROP TABLE IF EXISTS shippers; 
			CREATE TABLE shippers (
				ShipperID int(11) NOT NULL, 	
 				CompanyName varchar(40) NOT NULL, 	
 				Phone varchar(24),
			PRIMARY KEY(ShipperID)
			);

		6) To create table customers;
			DROP TABLE IF EXISTS customers; 
			CREATE TABLE customers (
   				CustomerID varchar(5) NOT NULL, 	
 				CompanyName varchar(40) NOT NULL,	
 				ContactName varchar(30),	
 				ContactTitle varchar(30), 	
 				Address varchar(60), 	
 				City varchar(15), 	
 				Region varchar(15), 	
 				PostalCode varchar(10), 	
 				Country varchar(15), 	
 				Phone varchar(24), 	
 				Fax varchar(24),
    			PRIMARY KEY(CustomerID)
			);

		7) To create table orders;
			DROP TABLE IF EXISTS orders;
			CREATE TABLE orders (
   				OrderID int(11) NOT NULL, 	
 				CustomerID varchar(5) NOT NULL , 	
 				EmployeeID int(11) NOT NULL, 	
 				OrderDate datetime, 	
				RequiredDate datetime, 	
 				ShippedDate datetime, 	
 				ShipVia int(11) NOT NULL, 	
 				Freight decimal(10,4), 	
 				ShipName varchar(40), 	
 				ShipAddress varchar(60), 	
 				ShipCity varchar(15), 	
 				ShipRegion varchar(15), 	
 				ShipPostalCode varchar(10), 	
 				ShipCountry varchar(15),
    			PRIMARY KEY(OrderID),
			FOREIGN KEY(CustomerID) REFERENCES customers(CustomerID),
			FOREIGN KEY(EmployeeID) REFERENCES employees(EmployeeID),
			FOREIGN KEY(ShipVia) REFERENCES shippers(ShipperID)
			);

		8) To create table suppliers;
			DROP TABLE IF EXISTS suppliers;
			CREATE TABLE suppliers (
    				SupplierID int(11) NOT NULL, 	
				CompanyName varchar(40) NOT NULL, 	
				ContactName varchar(30), 	
				ContactTitle varchar(30), 	
				Address varchar(60), 	
				City varchar(15), 	
				Region varchar(15), 	
				PostalCode varchar(10), 	
				Country varchar(15), 	
				Phone varchar(24), 	
				Fax varchar(24), 	
				HomePage mediumtext,
    			PRIMARY KEY(SupplierID)
			);

		9) To create table categories;
			DROP TABLE IF EXISTS categories;
			CREATE TABLE categories (
				CategoryID int(11) NOT NULL, 	
 				CategoryName varchar(15) NOT NULL, 	
 				Description mediumtext, 	
			PRIMARY KEY(CategoryID)
			);

		10) To create table products;
			DROP TABLE IF EXISTS products;
			CREATE TABLE products (
				ProductID int(11) NOT NULL, 	
				ProductName varchar(40) NOT NULL, 	
				SupplierID int(11) NOT NULL,	
				CategoryID int(11) NOT NULL, 	
				QuantityPerUnit varchar(20), 	
				UnitPrice decimal(10,4), 	
				UnitsInStock smallint(2), 	
				UnitsOnOrder smallint(2), 	
				ReorderLevel smallint(2), 	
				Discontinued bit(1), 	
			PRIMARY KEY(ProductID),
			FOREIGN KEY(SupplierID) REFERENCES suppliers(SupplierID),
			FOREIGN KEY(CategoryID) REFERENCES categories(CategoryID)
			);

		11) To create table order_details;
			DROP TABLE IF EXISTS order_details;
			CREATE TABLE order_details (
    				OrderID int(11) NOT NULL, 	
				ProductID int(11) NOT NULL, 	
				UnitPrice decimal(10,4) NOT NULL, 	
				Quantity smallint(2) NOT NULL, 	
				Discount double(8,0) NOT NULL,
			FOREIGN KEY(OrderID) REFERENCES orders(OrderID),
			FOREIGN KEY(ProductID) REFERENCES products(ProductID)
			);

		12) To create table customerDemographics;
			DROP TABLE IF EXISTS customerDemographics;
			CREATE TABLE customerDemographics (
				CustomerTypeID varchar(10) NOT NULL,
				CustomerDesc mediumtext,
			PRIMARY KEY(CustomerTypeID)
			);

		13) To create table customerCustomerDemo;
			DROP TABLE IF EXISTS customerCustomerDemo;
			Create TABLE customerCustomerDemo (
				CustomerID varchar(5) NOT NULL,
				CustomerTypeID varchar(10) NOT NULL,
				PRIMARY KEY(CustomerID),
			FOREIGN KEY(CustomerID) REFERENCES customers(CustomerID),
			FOREIGN KEY(CustomerTypeID) REFERENCES customerDemographics(CustomerTypeID)
			);	


		Ans:b.Loading scripts for populating data into the tables.
		1)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/regions.csv'
			into table regions fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;

		2)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/territories.csv'
			into table territories fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;
		
		3)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/employees.csv'
			into table employees fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;

		4)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/employee-territories.csv'
			into table employee_territories fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;

		5)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/shippers.csv'
			into table shippers fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;

		6)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/customers.csv'
			into table customers fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;

		7)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/orders.csv'
			into table orders fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;
		
		8)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/suppliers.csv'
			into table suppliers fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;

		9)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/categories.csv'
			into table categories fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;
		
		10)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/products.csv'
			ignore into table products fields terminated by ',' enclosed by '' 
			lines terminated by '\n' ;

		11)	Load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/order_details.csv'
			into table order_details fields terminated by ',' enclosed by '"' 
			lines terminated by '\n' ignore 1 rows;
